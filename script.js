document.addEventListener('DOMContentLoaded', () => {
// –¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
const weddingDate = new Date("July 11, 2025 10:00:00").getTime();
const countdownTimer = setInterval(() => {
    const now = new Date().getTime();
    const timeLeft = weddingDate - now;

    if (timeLeft <= 0) {
        document.getElementById("countdown").innerHTML = `
            <span>–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Å–≤–∞–¥—å–±—ã!</span>
            <strong>üéâ</strong>
        `;
        clearInterval(countdownTimer);
        return;
    }

    // –í—ã—á–∏—Å–ª—è–µ–º –¥–Ω–∏, —á–∞—Å—ã –∏ –º–∏–Ω—É—Ç—ã
    const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
    const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–π–º–µ—Ä–∞
    document.getElementById("countdown").innerHTML = `
        <span>–î–æ —Å–≤–∞–¥—å–±—ã –æ—Å—Ç–∞–ª–æ—Å—å:</span>
        <strong>${days} –¥–Ω–µ–π ${hours} —á–∞—Å–æ–≤ ${minutes} –º–∏–Ω—É—Ç</strong>
    `;
}, 1000);

// –ë–ª–æ–∫ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
let lastScrollPosition = 0; // –¢—Ä–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –ø–æ–∑–∏—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

const fadeElements = document.querySelectorAll('.fade-in');
const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤–∏–¥–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
            entry.target.classList.add('visible'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å visible
            entry.target.classList.remove('fade-in-top', 'fade-in-bottom'); // –£–±–∏—Ä–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã
        } else {
            // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç–∫—Ä–∞–Ω–∞
            const rect = entry.boundingClientRect;
            const screenHeight = window.innerHeight;

            if (rect.top < screenHeight * 0.7) {
                // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤—ã—Ö–æ–¥–∏—Ç —Å–≤–µ—Ä—Ö—É
                entry.target.classList.add('fade-in-top');
                entry.target.classList.remove('fade-in-bottom');
            } else if (rect.bottom > screenHeight * 0.3) {
                // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤—ã—Ö–æ–¥–∏—Ç —Å–Ω–∏–∑—É
                entry.target.classList.add('fade-in-bottom');
                entry.target.classList.remove('fade-in-top');
            }
        }
    });
}, { threshold: [0, 1] }); // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø–æ–ª–Ω—É—é –≤–∏–¥–∏–º–æ—Å—Ç—å

// –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∫–∞–∂–¥—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
fadeElements.forEach(element => {
    observer.observe(element);
});

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
window.addEventListener('scroll', () => {
    const currentScrollPosition = window.scrollY;

    // –ï—Å–ª–∏ —Å–∫—Ä–æ–ª–ª–∏–º –≤–Ω–∏–∑
    if (currentScrollPosition > lastScrollPosition) {
        fadeElements.forEach(element => {
            if (!element.classList.contains('visible')) {
                element.classList.add('fade-in-bottom');
                element.classList.remove('fade-in-top');
            }
        });
    } 
    // –ï—Å–ª–∏ —Å–∫—Ä–æ–ª–ª–∏–º –≤–≤–µ—Ä—Ö
    else {
        fadeElements.forEach(element => {
            if (!element.classList.contains('visible')) {
                element.classList.add('fade-in-top');
                element.classList.remove('fade-in-bottom');
            }
        });
    }

    lastScrollPosition = currentScrollPosition;
});

  // –ë–ª–æ–∫ –¥–ª—è —Å—Ç—Ä–µ–ª–∫–∏ —Å–∫—Ä–æ–ª–ª–∞
  const scrollArrow = document.querySelector('.scroll-arrow');
  let isAtBottom = false;

  function checkScrollPosition() {
      const scrollTop = window.scrollY;
      const windowHeight = window.innerHeight;
      const documentHeight = document.documentElement.scrollHeight;

      if (scrollTop + windowHeight >= documentHeight - 10) {
          scrollArrow.style.opacity = '0';
          scrollArrow.style.pointerEvents = 'none';
          isAtBottom = true;
      } else {
          scrollArrow.style.opacity = '0.8';
          scrollArrow.style.pointerEvents = 'auto';
          isAtBottom = false;
      }
  }

  window.addEventListener('scroll', () => {
      checkScrollPosition();
  });

  let timeoutId;
  function resetTimeout() {
      clearTimeout(timeoutId);
      timeoutId = setTimeout(() => {
          if (!isAtBottom) {
              scrollArrow.style.opacity = '0';
              scrollArrow.style.pointerEvents = 'none';
          }
      }, 10000);
  }

  window.addEventListener('scroll', resetTimeout);
  window.addEventListener('mousemove', resetTimeout);

  checkScrollPosition();
  resetTimeout();

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
  const form = document.getElementById('guest-form');
  form.addEventListener('submit', (e) => {
      e.preventDefault();

      const name = form.querySelector('#name').value.trim();
      const attendance = form.querySelector('input[name="attendance"]:checked');
      const food = form.querySelector('input[name="food"]:checked');

      if (!name || !attendance || !food) {
          alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!');
          return;
      }

      const formData = new FormData(form);
      const data = {};
      formData.forEach((value, key) => {
          data[key] = value;
      });

      console.log(data); // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∞–Ω–∫–µ—Ç—É!');
      form.reset();
  });
});